<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        /* CSS 영역 */
    </style>
    <script>
        //Javascript 영역
        alert("안녕~");
    </script>
    <script src="ex01.js"></script>

</head>
<body>
    
    <!-- 
    
    웹 클라이언트
    1. HTML
        - 골격(레이아웃) + 데이터(문자열, 이미지 등)
    2. CSS
        - 1번 결과물 + 서식
    3. Javascript
        - 1번 + 2번 + 프로그래밍 가능
    
    Javascript
    - 브라우저에서 동작하는 프로그래밍 언어
    - 가볍고 쉽다. > 어렵다.
    - C 계열 언어(기본 구문이 자바와 유사)
    - 초반 : 유효성 검사 + 링크 제어 + 이미지 제어 + 특정 태그 언어
    - 중반 : 모든 태그 제어
    - 현재 : 브라우저가 아닌 환경에서 독립 실행이 가능

    Javascript 하는 일? (수업)

    1. 기본적인 프로그래밍 언어의 역할
        - 데이터 연산
        - 변수
        - 제어문
        - 조작, 가공
        - 등등...

    2. 브라우저에 특화된 행동
        - HTML/CSS 요소에 대한 조작 능력
        a. HTML Element 생성
        b. HTML Element 수정(조작)
        c. HTML Element 삭제
        d. Attribute, PCDATA > 생성, 수정, 삭제
        e. CSS > 생성, 수정, 삭제
        f. 입력 양식 데이터 유효성 검사

    Javascript 역사
    1. Netscape Navigator > Javascript 1.0 > 1.1 > 1.2 > 1.3 > .... > 1.8
    2. Internet Explorer > Javascript > JScript 1.0 > 2.0 > 3.0 > ... > 8.0
    3. W3C > 표준 스크립트 등재 > ECMAScript > 5.0 > 6.0
    4. Node.js 


    Javascript 적용 방식 
    1. 인라인 방식 > 이벤트
        - 태그에 직접 기재
        - CSS : style 속성 사용
        - Javascript : 이벤트 핸들러 속성 사용(onXXX)

    2. 내부 방식
        - <script> 태그 사용
        - Javascript 인식 가능한 영역 제공

    3. 외부 방식
        - *.js 파일
        - <script> 태그 사용

    -->

    <div onclick="alert('안녕');">상자</div>


</body>
</html>